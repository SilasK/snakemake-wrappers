


rule map_reads_with_bbmap:
    input:
        input=["reads/{sample}.1.fastq.gz", "reads/{sample}.2.fastq.gz"],
        ref="genome.fasta",
    output:
        sam="mapped/{sample}.sam",
    log:
        stdout="logs/bbmap/{sample}.out",  # Split stdout and stderr into separate files to have a nice log file
        stderr="logs/bbmap/{sample}.log",
    params:
        command="bbmap.sh",    # Define which bbmap command to use
        nodisk=True,           # All parameters are passed to the command
        machineout=True,
        overwrite=True, # Otherwise snakemake has problems
        unpigz=True,
    threads: 12
    resources:
        mem="60GB",  # optional: bbmap normaly needs a lot of memory
    wrapper:
        "master/bio/bbtools/generic"


rule pileup:  # all rules use the same wrapper!!
    input:
        input="mapped/{sample}.sam",
        ref="genome.fasta",
    output:
        covstats="covstats/{sample}.tsv",
        basecov="basecov/{sample}.tsv",
    log:
        stdout="logs/bbmap/{sample}.out",
        stderr="logs/bbmap/{sample}.log",
    params:
        command="pileup.sh",
        nzo=True,
        overwrite=True,
    threads: 4
    resources:
        mem="20GB",
    wrapper:
        "master/bio/bbtools/generic"



rule create_reads:
    input:
        ref="genome.fasta",
    output:
        out=["reads/{sample}.1.fastq.gz", "reads/{sample}.2.fastq.gz"],
    params:
        command="randomreads.sh",  
        length=100,  
        reads=10,
        overwrite=True,  
        pigz=True,
        define_threads = False # By default, the number of threads is defined by snakemake
    log:
        "logs/create_reads/{sample}.log",
    wrapper:
        "master/bio/bbtools/generic"

